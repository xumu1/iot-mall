<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ustc.iot.dao.GatewayMapper">
    <resultMap id="BaseResultMap" type="edu.ustc.iot.pojo.component.Sensor">
        <id column="id" property="id"/>
        <result column="model" property="model"/>
        <result column="innerProtocols" property="innerProtocols"/>
        <result column="uploadProtocols" property="uploadProtocols"/>
        <result column="IndustrialGrade" property="IndustrialGrade"/>
        <result column="chargeable" property="chargeable"/>
        <result column="lowVoltage" property="lowVoltage"/>
        <result column="highVoltage" property="highVoltage"/>
        <result column="lowTemperature" property="lowTemperature"/>
        <result column="highTemperature" property="highTemperature"/>
        <result column="desc" property="desc"/>
        <result column="otherDesc" property="otherDesc"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,model,innerProtocols,
        uploadProtocols,IndustrialGrade,
        chargeable, lowVoltage,
        highVoltage,lowTemperature,
        highTemperature,desc,otherDesc
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gateway
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from component
    where id = #{id,jdbcType=INTEGER}
  </delete>
<!--    待改-->
    <insert id="insert" parameterType="edu.ustc.iot.pojo.component.Sensor">
    insert into component (id, name, type ,company,description)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="edu.ustc.iot.pojo.component.Component">
        insert into component
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="company != null">
                company,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="company != null">
                #{company,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="edu.ustc.iot.pojo.component.Component">
        update component
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="company != null">
                company = #{company,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="edu.ustc.iot.pojo.component.Component">
    update component
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      company = #{company,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from component
        where type = #{type,jdbcType=INTEGER}
    </select>
</mapper>

        <!--    <select id="selectByProductIdSet" resultMap="BaseResultMap">-->
        <!--        select-->
        <!--        <include refid="Base_Column_List"/>-->
        <!--        from mall_product-->
        <!--        <where>-->
        <!--            <if test="productIdSet.size() > 0">-->
        <!--                id in-->
        <!--                <foreach collection="productIdSet" item="item" index="index" open="(" separator="," close=")">-->
        <!--                    #{item}-->
        <!--                </foreach>-->
        <!--            </if>-->
        <!--        </where>-->
        <!--    </select>-->
