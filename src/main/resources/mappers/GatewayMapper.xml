<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ustc.iot.dao.GatewayMapper">
    <resultMap id="BaseResultMap" type="edu.ustc.iot.pojo.component.Gateway">
        <id column="id" property="id"/>
        <result column="model" property="model"/>
        <result column="innerProtocols" property="innerProtocols"/>
        <result column="uploadProtocols" property="uploadProtocols"/>
        <result column="industrialGrade" property="industrialGrade"/>
        <result column="chargeable" property="chargeable"/>
        <result column="lowVoltage" property="lowVoltage"/>
        <result column="highVoltage" property="highVoltage"/>
        <result column="lowTemperature" property="lowTemperature"/>
        <result column="highTemperature" property="highTemperature"/>
        <result column="desc" property="desc"/>
        <result column="otherDesc" property="otherDesc"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,model,innerProtocols,
        uploadProtocols,industrialGrade,
        chargeable, lowVoltage,
        highVoltage,lowTemperature,
        highTemperature,`desc`,otherDesc
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        *
        from gateway
        where id = #{id}
    </select>
    <select id="selectByType" resultMap="BaseResultMap">
        select
        *
        from gateway
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ustc.iot.pojo.component.Gateway">
        select * from gateway
        <where>
            <if test="model != null">
                model = #{model}
            </if>
            <if test="model == null">
                <if test="innerProtocols != null">
                    innerProtocols like concat('%',#{innerProtocols},'%')
                </if>
                <if test="uploadProtocols != null">
                    and uploadProtocols like concat('%',#{uploadProtocols},'%')
                </if>
                <if test="industrialGrade != null">
                    and industrialGrade like concat('%',#{industrialGrade},'%')
                </if>
                <if test="chargeable != null">
                    and chargeable = #{chargeable}
                </if>
                <if test="lowVoltage != null">
                    and lowVoltage <![CDATA[ <= #{lowVoltage}]]>
                </if>
                <if test="highVoltage != null">
                    and highVoltage >= #{highVoltage}
                </if>
                <if test="lowTemperature != null">
                    and lowTemperature <![CDATA[ <= #{lowTemperature}]]>
                </if>
                <if test="highTemperature != null">
                    and highTemperature >= #{highTemperature}
                </if>
            </if>
        </where>
    </select>
    <delete id="deleteComponentById" parameterType="java.lang.Integer">
        delete from gateway
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="edu.ustc.iot.pojo.component.Gateway">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into gateway
        ( model,innerProtocols,
        uploadProtocols,industrialGrade,
        chargeable, lowVoltage,
        highVoltage,lowTemperature,
        highTemperature,`desc`,otherDesc)
        values (#{model}, #{innerProtocols},
        #{uploadProtocols}, #{industrialGrade},
        #{chargeable}, #{lowVoltage}, #{highVoltage}, #{lowTemperature},#{highTemperature},#{desc}, #{otherDesc})
    </insert>
    <update id="updateByPrimaryKey" parameterType="edu.ustc.iot.pojo.component.Gateway">
        update gateway
        set model = #{model},
        innerProtocols = #{innerProtocols},
        uploadProtocols = #{uploadProtocols},
        industrialGrade = #{industrialGrade},
        chargeable = #{chargeable},
        lowVoltage = #{lowVoltage},
        highVoltage = #{highVoltage},
        lowTemperature = #{lowTemperature},
        highTemperature = #{highTemperature},
        `desc` = #{desc},
        otherDesc = #{otherDesc}
        where id = #{id}
    </update>
</mapper>

